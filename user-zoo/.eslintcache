[{"/Users/alo/scratch/localhost-api/user-zoo/src/index.tsx":"1","/Users/alo/scratch/localhost-api/user-zoo/src/reportWebVitals.ts":"2","/Users/alo/scratch/localhost-api/user-zoo/src/App.tsx":"3","/Users/alo/scratch/localhost-api/user-zoo/src/graphql/mutations.ts":"4"},{"size":500,"mtime":1607474207170,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1607474207170,"results":"7","hashOfConfig":"6"},{"size":1846,"mtime":1607477322951,"results":"8","hashOfConfig":"6"},{"size":2456,"mtime":1607479086451,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"kumlox",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alo/scratch/localhost-api/user-zoo/src/index.tsx",[],["20","21"],"/Users/alo/scratch/localhost-api/user-zoo/src/reportWebVitals.ts",[],"/Users/alo/scratch/localhost-api/user-zoo/src/App.tsx",["22"],"import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { SEND_NOD } from \"./graphql/mutations\"\n\nfunction App() {\n\n  const [sendNodState, setSendNodState] = useState({ from: \"\", to: \"\", message: \"\" })\n  const [sendNodResponse, setSendNodResponse] = useState({})\n\n  const client = new ApolloClient({\n    uri: 'http://localhost:80/api',\n    cache: new InMemoryCache({\n      addTypename: false\n    }),\n  });\n\n  const handleSendNodChange = (e: any, key: any) => {\n    setSendNodState({ ...sendNodState, [key]: e.target.value });\n  }\n\n  const sendNod = async (e: any) => {\n    e.preventDefault()\n    e.stopPropagation();\n    console.log(JSON.stringify(sendNodState))\n\n    const input = { from: sendNodState.from, to: sendNodState.to, message: sendNodState.message, latitude: 26.0, longitude: 26.0 }\n\n    try {\n      const result = await client.mutate({\n        mutation: SEND_NOD,\n        variables: { input },\n      });\n      setSendNodResponse(result.data.sendNod)\n    } catch (e) {\n      setSendNodResponse(e)\n    }\n  }\n\n  return (\n    <>\n      <h1>Send Nod</h1>\n      <form onSubmit={sendNod}>\n        <label htmlFor=\"from\">From ID:</label><br />\n        <input type=\"text\" value={sendNodState.from} onChange={(e) => handleSendNodChange(e, \"from\")} /><br />\n        <label htmlFor=\"to\">To ID:</label><br />\n        <input type=\"text\" value={sendNodState.to} onChange={(e) => handleSendNodChange(e, \"to\")} /><br />\n        <label htmlFor=\"message\">Message:</label><br />\n        <input type=\"text\" value={sendNodState.message} onChange={(e) => handleSendNodChange(e, \"message\")} /><br />\n        <button onClick={sendNod}>Send Nod</button>\n        <div>{JSON.stringify(sendNodResponse)}</div>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n","/Users/alo/scratch/localhost-api/user-zoo/src/graphql/mutations.ts",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]